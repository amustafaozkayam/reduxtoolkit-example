import {createSlice } from '@reduxjs/toolkit';


const initialState = {
  todos: [
     {id: new Date().getTime(), text: "Work On Toolkit", completed: false} ,
  ]};


const todoSlice = createSlice({
  name: 'todo',
  initialState,
  reducers:{
        
    addTodo: (state, action) => {
      state.todos = [...state.todos, {id: new Date().getTime(), text : action.payload, completed:false}] 
      
    },
    deleteTodo: (state,action) => {
      return {
        todos : [...state.todos].filter(i => i.id !== action.payload)
      }
      
      
    },
    
    toggleTodo: (state, action) => {
      return {
        // ...state.todos,
        todos : [...state.todos].map((t) =>{
          return(
            t.id === action.payload
            ?{...t, completed: !t.completed}
            :t
        )})
        }
      },
    resetTodo: (state, action) => {
      state.todos = initialState.todos
      
    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
 
});

export const {addTodo, deleteTodo, toggleTodo, resetTodo } = todoSlice.actions;
export default todoSlice.reducer


